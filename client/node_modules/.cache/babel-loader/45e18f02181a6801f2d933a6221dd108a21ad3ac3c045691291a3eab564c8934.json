{"ast":null,"code":"var _jsxFileName = \"/Users/minhyunglee/Desktop/Project/\\u110C\\u1175\\u11AB\\u1112\\u1162\\u11BC \\u110C\\u116E\\u11BC/MovieRank/movie-rank-front/src/component/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { effect } from \"../animation\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Content = styled.div`\n  width: 100%;\n  height: 5%;\n  background: black;\n  font-size: 1rem;\n  font-weight: 800;\n`;\n_c = Content;\nfunction Card(_ref) {\n  _s();\n  let {\n    newData,\n    poster,\n    setSelect,\n    isSelect,\n    clickHandler\n  } = _ref;\n  useLayoutEffect(effect, []); // 의존성 배열 내부의 값이 변할 때 마다 LayoutEffect 실행\n  console.log(poster);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: newData.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel__card\",\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          children: newData[idx][\"movieNm\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster[idx],\n          alt: \"pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, newData[idx][\"rank\"], true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(Card, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n_c2 = Card;\nexport default _c3 = /*#__PURE__*/React.memo(Card);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useLayoutEffect","useState","effect","styled","Content","div","Card","newData","poster","setSelect","isSelect","clickHandler","console","log","map","el","idx","memo"],"sources":["/Users/minhyunglee/Desktop/Project/진행 중/MovieRank/movie-rank-front/src/component/Card.js"],"sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport { effect } from \"../animation\";\nimport styled from \"styled-components\";\n\nexport const Content = styled.div`\n  width: 100%;\n  height: 5%;\n  background: black;\n  font-size: 1rem;\n  font-weight: 800;\n`;\n\nfunction Card({ newData, poster, setSelect, isSelect, clickHandler }) {\n  useLayoutEffect(effect, []); // 의존성 배열 내부의 값이 변할 때 마다 LayoutEffect 실행\n  console.log(poster);\n\n  return (\n    <>\n      {newData.map((el, idx) => {\n        return (\n          <div className=\"wheel__card\" key={newData[idx][\"rank\"]}>\n            <Content>{newData[idx][\"movieNm\"]}</Content>\n            <img src={poster[idx]} alt=\"pic\"></img>\n          </div>\n        );\n      })}\n\n      {/* <div className=\"wheel__card\">\n        <img src={poster[1]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>3</div>\n        <img src={poster[2]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>4</div>\n        <img src={poster[3]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>5</div>\n        <img src={poster[4]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>6</div>\n        <img src={poster[5]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>7</div>\n        <img src={poster[6]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>8</div>\n        <img src={poster[7]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>9</div>\n        <img src={poster[8]} alt=\"pic\"></img>\n      </div>\n      <div className=\"wheel__card\">\n        <div>10</div>\n        <img src={poster[9]} alt=\"pic\"></img>\n      </div> */}\n    </>\n  );\n}\n\nexport default React.memo(Card);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,OAAO,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KANWD,OAAO;AAQpB,SAASE,IAAI,OAAyD;EAAA;EAAA,IAAxD;IAAEC,OAAO;IAAEC,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EAClEX,eAAe,CAACE,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;EAC7BU,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EAEnB,oBACE;IAAA,UACGD,OAAO,CAACO,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;MACxB,oBACE;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B,QAAC,OAAO;UAAA,UAAET,OAAO,CAACS,GAAG,CAAC,CAAC,SAAS;QAAC;UAAA;UAAA;UAAA;QAAA,QAAW,eAC5C;UAAK,GAAG,EAAER,MAAM,CAACQ,GAAG,CAAE;UAAC,GAAG,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA,GAFPT,OAAO,CAACS,GAAG,CAAC,CAAC,MAAM,CAAC;QAAA;QAAA;QAAA;MAAA,QAGhD;IAEV,CAAC;EAAC,iBAqCD;AAEP;AAAC,GApDQV,IAAI;AAAA,MAAJA,IAAI;AAsDb,kCAAeP,KAAK,CAACkB,IAAI,CAACX,IAAI,CAAC;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
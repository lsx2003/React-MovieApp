{"ast":null,"code":"var _jsxFileName = \"/Users/minhyunglee/Desktop/Project/\\u110C\\u1175\\u11AB\\u1112\\u1162\\u11BC \\u110C\\u116E\\u11BC/MovieRank/movie-rank-front/src/component/Modal.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalContainer = styled.div`\n  display: flex;\n\n  width: 100wh;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n_c = ModalContainer;\nexport const ModalBackdrop = styled.div`\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: gray;\n`;\n_c2 = ModalBackdrop;\nexport const ModalBtn = styled.button`\n  position: absolute;\n  top: 100px;\n  background-color: var(--coz-purple-600);\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: white;\n  border-radius: 30px;\n  cursor: grab;\n`;\n_c3 = ModalBtn;\nexport const ModalView = styled.div.attrs(props => ({\n  // attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가할 수 있습니다.\n  // className: \"sc-hKwCoD kNUhNr\",\n  role: \"dialog\"\n}))`\n  position: absolute;\n  top: 20%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: black;\n  width: 150px;\n  height: 50px;\n  padding: 20px;\n  background: white;\n  border: 1px solid;\n  border-radius: 20px;\n  font-size: 20px;\n`;\n_c4 = ModalView;\nexport const Bsx = styled.div`\n  display: block;\n  font-size: 15px;\n`;\n_c5 = Bsx;\nexport const Modal = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(true);\n  const openModalHandler = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ModalBtn, {\n        onClick: openModalHandler,\n        children: isOpen ? \"Opend\" : \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(ModalBackdrop, {\n        onClick: openModalHandler,\n        children: /*#__PURE__*/_jsxDEV(ModalView, {\n          onClick: event => event.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(Bsx, {\n            onClick: openModalHandler,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), \"Hello CodeStates!!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n_c6 = Modal;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ModalContainer\");\n$RefreshReg$(_c2, \"ModalBackdrop\");\n$RefreshReg$(_c3, \"ModalBtn\");\n$RefreshReg$(_c4, \"ModalView\");\n$RefreshReg$(_c5, \"Bsx\");\n$RefreshReg$(_c6, \"Modal\");","map":{"version":3,"names":["useState","styled","ModalContainer","div","ModalBackdrop","ModalBtn","button","ModalView","attrs","props","role","Bsx","Modal","isOpen","setIsOpen","openModalHandler","event","stopPropagation"],"sources":["/Users/minhyunglee/Desktop/Project/진행 중/MovieRank/movie-rank-front/src/component/Modal.js"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport const ModalContainer = styled.div`\n  display: flex;\n\n  width: 100wh;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const ModalBackdrop = styled.div`\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: gray;\n`;\n\nexport const ModalBtn = styled.button`\n  position: absolute;\n  top: 100px;\n  background-color: var(--coz-purple-600);\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: white;\n  border-radius: 30px;\n  cursor: grab;\n`;\n\nexport const ModalView = styled.div.attrs((props) => ({\n  // attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가할 수 있습니다.\n  // className: \"sc-hKwCoD kNUhNr\",\n  role: \"dialog\",\n}))`\n  position: absolute;\n  top: 20%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: black;\n  width: 150px;\n  height: 50px;\n  padding: 20px;\n  background: white;\n  border: 1px solid;\n  border-radius: 20px;\n  font-size: 20px;\n`;\nexport const Bsx = styled.div`\n  display: block;\n  font-size: 15px;\n`;\n\nexport const Modal = () => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const openModalHandler = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <ModalContainer>\n        <ModalBtn onClick={openModalHandler}>\n          {isOpen ? \"Opend\" : \"Open Modal\"}\n        </ModalBtn>\n        {isOpen ? (\n          <ModalBackdrop onClick={openModalHandler}>\n            <ModalView onClick={(event) => event.stopPropagation()}>\n              <Bsx onClick={openModalHandler}>X</Bsx>\n              Hello CodeStates!!\n            </ModalView>\n          </ModalBackdrop>\n        ) : null}\n      </ModalContainer>\n    </>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,OAAO,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KARWD,cAAc;AAU3B,OAAO,MAAME,aAAa,GAAGH,MAAM,CAACE,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MATWC,aAAa;AAW1B,OAAO,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,MAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAVWD,QAAQ;AAYrB,OAAO,MAAME,SAAS,GAAGN,MAAM,CAACE,GAAG,CAACK,KAAK,CAAEC,KAAK,KAAM;EACpD;EACA;EACAC,IAAI,EAAE;AACR,CAAC,CAAC,CAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAnBWH,SAAS;AAoBtB,OAAO,MAAMI,GAAG,GAAGV,MAAM,CAACE,GAAI;AAC9B;AACA;AACA,CAAC;AAAC,MAHWQ,GAAG;AAKhB,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMe,gBAAgB,GAAG,MAAM;IAC7BD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,cAAc;MAAA,wBACb,QAAC,QAAQ;QAAC,OAAO,EAAEE,gBAAiB;QAAA,UACjCF,MAAM,GAAG,OAAO,GAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QACvB,EACVA,MAAM,gBACL,QAAC,aAAa;QAAC,OAAO,EAAEE,gBAAiB;QAAA,uBACvC,QAAC,SAAS;UAAC,OAAO,EAAGC,KAAK,IAAKA,KAAK,CAACC,eAAe,EAAG;UAAA,wBACrD,QAAC,GAAG;YAAC,OAAO,EAAEF,gBAAiB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA;MAE7B;QAAA;QAAA;QAAA;MAAA,QACE,GACd,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EACO,iBAChB;AAEP,CAAC;AAAC,GAxBWH,KAAK;AAAA,MAALA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
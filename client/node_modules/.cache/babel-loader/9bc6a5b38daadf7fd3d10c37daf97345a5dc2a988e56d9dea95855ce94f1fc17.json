{"ast":null,"code":"var _jsxFileName = \"/Users/minhyunglee/Desktop/Project/MovieRank/movie_rank/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport \"./App.css\";\nimport { gsap } from \"gsap\";\nimport { Flip } from \"gsap/Flip\";\nimport Card from \"./card\";\nimport { useLayoutEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const comp = useRef(); // 루트 레벨 요소에 대한 ref 생성(나중에 사용)\n  useLayoutEffect(() => {\n    // -- 여기 애니메이션 코드 --\n\n    gsap.registerPlugin(\"ScrollTrigger\");\n    let wheel = document.querySelector(\".wheel\");\n    let images = gsap.utils.toArray(\".wheel__card\"); // image 들을 배열로 만들어 변수에 할당\n    gsap.to(\".title\", {\n      x: 5,\n      ease: \"power1.inOut\",\n      repeat: -1,\n      yoyo: true\n    });\n    gsap.to(\".title\", {\n      y: 5,\n      ease: \"power1.inOut\",\n      repeat: -1,\n      yoyo: true\n    });\n    gsap.to(\".arrow\", {\n      y: 5,\n      ease: \"power1.inOut\",\n      repeat: -1,\n      yoyo: true\n    });\n\n    // arrow 클래스를 y방향으로 5만큼 이동\n    function setup() {\n      let radius = wheel.offsetWidth / 2; // wheel.offsetWidth : wheel 요소의 전체 크기\n      let center = wheel.offsetWidth / 2;\n      let total = images.length;\n      let slice = 2 * Math.PI / total; // image 갯수로 slice 할당\n\n      images.forEach((item, i) => {\n        let angle = i * slice;\n        let x = center + radius * Math.sin(angle);\n        let y = center - radius * Math.cos(angle);\n        gsap.set(item, {\n          rotation: angle + \"_rad\",\n          xPercent: -50,\n          yPercent: -50,\n          x: x,\n          y: y\n        });\n      });\n    }\n\n    // let x = 1000; // 1000일 때 가운데\n    // let y = 0; // 일때 whell 제일 위에 위치, 값이 높아 질수록 중심으로 이동\n    // set 메소드는 속성을 즉시 설정한다.(세팅)\n    //  test 클래스 요소가 opacity가 1일때  gsap.to(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n    //\n    //  test 클래스 요소가 opacity가 1일때  gsap.from(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n\n    setup();\n    window.addEventListener(\"resize\", setup);\n    // 스크롤 회전\n    gsap.to(\".wheel\", {\n      rotate: () => -360,\n      ease: \"none\",\n      duration: images.length,\n      scrollTrigger: {\n        start: 0,\n        end: \"max\",\n        scrub: 1,\n        snap: 1 / images.length,\n        invalidateOnRefresh: true\n      }\n    });\n    let cards = gsap.utils.toArray(\".wheel__card\");\n    let header = document.querySelector(\".header\");\n    let body = document.querySelector(\".header\");\n    let isFullScreen = true;\n\n    // keep track of last clicked card so we can put it back\n    let lastClickedCard;\n    cards.forEach(card => {\n      card.addEventListener(\"click\", e => {\n        if (lastClickedCard) {\n          putBack(e);\n        }\n        flip(e);\n      });\n    });\n    header.addEventListener(\"click\", e => {\n      if (!lastClickedCard) return;\n      putBack(e);\n    });\n    function putBack(e) {\n      let image = header.querySelector(\"img\");\n      let state = Flip.getState(image);\n      lastClickedCard.appendChild(image);\n      Flip.from(state, {\n        duration: 1,\n        ease: \"sine.out\",\n        absolute: true\n      });\n      lastClickedCard = null;\n    }\n    function flip(e) {\n      let image = e.target.querySelector(\"img\");\n      let state = Flip.getState(image);\n      header.appendChild(image);\n      Flip.from(state, {\n        duration: 1,\n        ease: \"sine.out\",\n        absolute: true\n      });\n      lastClickedCard = e.target;\n    }\n\n    // 클릭시 이미지 커지는 기능\n    function flip(e) {\n      let image = e.target.querySelector(\"img\");\n      if (image) {\n        e.classList.add(\"selected\");\n      }\n      lastClickedCard = e.target;\n    }\n    return () => {};\n  }, []); // <- 종속성 배열을 비우므로 모든 렌더링에서 다시 실행되지 않습니다!\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"title-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title\",\n        children: \"\\uC624\\uB298\\uC758 \\uC601\\uD654 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"slider-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"wheel\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"scroll-down\",\n      children: [\"Scroll down\", /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t4iDiljchXLFXpry14VbxwdYMbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["gsap","Flip","Card","useLayoutEffect","useRef","App","comp","registerPlugin","wheel","document","querySelector","images","utils","toArray","to","x","ease","repeat","yoyo","y","setup","radius","offsetWidth","center","total","length","slice","Math","PI","forEach","item","i","angle","sin","cos","set","rotation","xPercent","yPercent","window","addEventListener","rotate","duration","scrollTrigger","start","end","scrub","snap","invalidateOnRefresh","cards","header","body","isFullScreen","lastClickedCard","card","e","putBack","flip","image","state","getState","appendChild","from","absolute","target","classList","add"],"sources":["/Users/minhyunglee/Desktop/Project/MovieRank/movie_rank/src/App.js"],"sourcesContent":["import \"./style.css\";\nimport \"./App.css\";\nimport { gsap } from \"gsap\";\nimport { Flip } from \"gsap/Flip\";\nimport Card from \"./card\";\nimport { useLayoutEffect, useRef } from \"react\";\n\nfunction App() {\n  const comp = useRef(); // 루트 레벨 요소에 대한 ref 생성(나중에 사용)\n  useLayoutEffect(() => {\n    // -- 여기 애니메이션 코드 --\n\n    gsap.registerPlugin(\"ScrollTrigger\");\n\n    let wheel = document.querySelector(\".wheel\");\n    let images = gsap.utils.toArray(\".wheel__card\"); // image 들을 배열로 만들어 변수에 할당\n    gsap.to(\".title\", { x: 5, ease: \"power1.inOut\", repeat: -1, yoyo: true });\n    gsap.to(\".title\", { y: 5, ease: \"power1.inOut\", repeat: -1, yoyo: true });\n    gsap.to(\".arrow\", { y: 5, ease: \"power1.inOut\", repeat: -1, yoyo: true });\n\n    // arrow 클래스를 y방향으로 5만큼 이동\n    function setup() {\n      let radius = wheel.offsetWidth / 2; // wheel.offsetWidth : wheel 요소의 전체 크기\n      let center = wheel.offsetWidth / 2;\n      let total = images.length;\n      let slice = (2 * Math.PI) / total; // image 갯수로 slice 할당\n\n      images.forEach((item, i) => {\n        let angle = i * slice;\n\n        let x = center + radius * Math.sin(angle);\n        let y = center - radius * Math.cos(angle);\n\n        gsap.set(item, {\n          rotation: angle + \"_rad\",\n          xPercent: -50,\n          yPercent: -50,\n          x: x,\n          y: y,\n        });\n      });\n    }\n\n    // let x = 1000; // 1000일 때 가운데\n    // let y = 0; // 일때 whell 제일 위에 위치, 값이 높아 질수록 중심으로 이동\n    // set 메소드는 속성을 즉시 설정한다.(세팅)\n    //  test 클래스 요소가 opacity가 1일때  gsap.to(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n    //\n    //  test 클래스 요소가 opacity가 1일때  gsap.from(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n\n    setup();\n\n    window.addEventListener(\"resize\", setup);\n    // 스크롤 회전\n    gsap.to(\".wheel\", {\n      rotate: () => -360,\n      ease: \"none\",\n      duration: images.length,\n      scrollTrigger: {\n        start: 0,\n        end: \"max\",\n        scrub: 1,\n        snap: 1 / images.length,\n        invalidateOnRefresh: true,\n      },\n    });\n\n    let cards = gsap.utils.toArray(\".wheel__card\");\n    let header = document.querySelector(\".header\");\n    let body = document.querySelector(\".header\");\n\n    let isFullScreen = true;\n\n    // keep track of last clicked card so we can put it back\n    let lastClickedCard;\n\n    cards.forEach((card) => {\n      card.addEventListener(\"click\", (e) => {\n        if (lastClickedCard) {\n          putBack(e);\n        }\n        flip(e);\n      });\n    });\n\n    header.addEventListener(\"click\", (e) => {\n      if (!lastClickedCard) return;\n      putBack(e);\n    });\n\n    function putBack(e) {\n      let image = header.querySelector(\"img\");\n\n      let state = Flip.getState(image);\n\n      lastClickedCard.appendChild(image);\n\n      Flip.from(state, {\n        duration: 1,\n        ease: \"sine.out\",\n        absolute: true,\n      });\n\n      lastClickedCard = null;\n    }\n\n    function flip(e) {\n      let image = e.target.querySelector(\"img\");\n\n      let state = Flip.getState(image);\n\n      header.appendChild(image);\n\n      Flip.from(state, {\n        duration: 1,\n        ease: \"sine.out\",\n        absolute: true,\n      });\n\n      lastClickedCard = e.target;\n    }\n\n    // 클릭시 이미지 커지는 기능\n    function flip(e) {\n      let image = e.target.querySelector(\"img\");\n      if (image) {\n        e.classList.add(\"selected\");\n      }\n\n      lastClickedCard = e.target;\n    }\n\n    return () => {};\n  }, []); // <- 종속성 배열을 비우므로 모든 렌더링에서 다시 실행되지 않습니다!\n\n  return (\n    <body>\n      <div class=\"header\"></div>\n      <div class=\"title-wrap\">\n        <div class=\"title\">오늘의 영화 순위</div>\n      </div>\n      <section class=\"slider-section\">\n        <div class=\"wheel\">\n          <Card />\n          <Card />\n\n          <Card />\n          <Card />\n          <Card />\n          <Card />\n          <Card />\n        </div>\n      </section>\n\n      <div class=\"scroll-down\">\n        Scroll down\n        <div class=\"arrow\"></div>\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
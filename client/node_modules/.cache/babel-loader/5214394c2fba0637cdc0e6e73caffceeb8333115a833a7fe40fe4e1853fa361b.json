{"ast":null,"code":"import { gsap } from \"gsap\";\nimport { Flip } from \"gsap/Flip\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nexport const effect = () => {\n  gsap.registerPlugin(Flip);\n  gsap.registerPlugin(ScrollTrigger);\n  let wheel = document.querySelector(\".wheel\");\n  let images = gsap.utils.toArray(\".wheel__card\"); // image 들을 배열로 만들어 변수에 할당\n  gsap.to(\".title\", {\n    x: 5,\n    ease: \"power1.inOut\",\n    repeat: -1,\n    yoyo: true\n  });\n  gsap.to(\".title\", {\n    y: 5,\n    ease: \"power1.inOut\",\n    repeat: -1,\n    yoyo: true\n  });\n  gsap.to(\".arrow\", {\n    y: 5,\n    ease: \"power1.inOut\",\n    repeat: -1,\n    yoyo: true\n  });\n\n  // arrow 클래스를 y방향으로 5만큼 이동\n  function setup() {\n    let radius = wheel.offsetWidth / 2; // wheel.offsetWidth : wheel 요소의 전체 크기\n    let center = wheel.offsetWidth / 2;\n    let total = images.length;\n    let slice = 2 * Math.PI / total; // image 갯수로 slice 할당\n\n    images.forEach((item, i) => {\n      let angle = i * slice;\n      let x = center + radius * Math.sin(angle);\n      let y = center - radius * Math.cos(angle);\n      gsap.set(item, {\n        rotation: angle + \"_rad\",\n        xPercent: -50,\n        yPercent: -50,\n        x: x,\n        y: y\n      });\n    });\n  }\n\n  // let x = 1000; // 1000일 때 가운데\n  // let y = 0; // 일때 whell 제일 위에 위치, 값이 높아 질수록 중심으로 이동\n  // set 메소드는 속성을 즉시 설정한다.(세팅)\n  //  test 클래스 요소가 opacity가 1일때  gsap.to(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n  //\n  //  test 클래스 요소가 opacity가 1일때  gsap.from(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n\n  setup();\n  window.addEventListener(\"resize\", setup);\n  // 스크롤 회전\n  gsap.to(\".wheel\", {\n    rotate: () => -360,\n    ease: \"none\",\n    duration: images.length,\n    scrollTrigger: {\n      start: 0,\n      end: \"max\",\n      scrub: 1,\n      snap: 1 / images.length,\n      invalidateOnRefresh: true\n    }\n  });\n  let cards = gsap.utils.toArray(\".wheel__card\");\n  let header = document.querySelector(\".header\");\n\n  // keep track of last clicked card so we can put it back\n  let lastClickedCard;\n  cards.forEach(card => {\n    card.addEventListener(\"click\", e => {\n      if (lastClickedCard) {\n        putBack(e);\n      }\n      flip(e);\n    });\n  });\n  header.addEventListener(\"click\", e => {\n    if (!lastClickedCard) return;\n    putBack(e);\n  });\n\n  // function removeContent(e) {\n  //   let image = header.querySelector(\"img\");\n  //   let content = header.querySelector(\".content\");\n  //   let state = Flip.getState(content);\n\n  //   content.remove();\n  //   Flip.from(state, {\n  //     duration: 0.6,\n  //     ease: \"sine.out\",\n  //     absolute: true,\n  //   });\n  // }\n\n  function putBack(e) {\n    let image = header.querySelector(\"img\");\n    let state = Flip.getState(image);\n    lastClickedCard.appendChild(image);\n    Flip.from(state, {\n      duration: 0.6,\n      ease: \"sine.out\",\n      absolute: true\n    });\n    lastClickedCard = null;\n    header.removeChild(fragment);\n  }\n  function flip(e) {\n    fragment.classList.add(\"content\");\n    let image = e.target.querySelector(\"img\");\n    let state = Flip.getState(image);\n    header.appendChild(image);\n    header.appendChild(fragment);\n    image.classList.add(\"select\");\n    Flip.from(state, {\n      duration: 0.6,\n      ease: \"sine.out\",\n      absolute: true\n    });\n    lastClickedCard = e.target;\n  }\n};","map":{"version":3,"names":["gsap","Flip","ScrollTrigger","effect","registerPlugin","wheel","document","querySelector","images","utils","toArray","to","x","ease","repeat","yoyo","y","setup","radius","offsetWidth","center","total","length","slice","Math","PI","forEach","item","i","angle","sin","cos","set","rotation","xPercent","yPercent","window","addEventListener","rotate","duration","scrollTrigger","start","end","scrub","snap","invalidateOnRefresh","cards","header","lastClickedCard","card","e","putBack","flip","image","state","getState","appendChild","from","absolute","removeChild","fragment","classList","add","target"],"sources":["/Users/minhyunglee/Desktop/Project/MovieRank/movie_rank/src/animation.js"],"sourcesContent":["import { gsap } from \"gsap\";\nimport { Flip } from \"gsap/Flip\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nexport const effect = () => {\n  gsap.registerPlugin(Flip);\n  gsap.registerPlugin(ScrollTrigger);\n\n  let wheel = document.querySelector(\".wheel\");\n  let images = gsap.utils.toArray(\".wheel__card\"); // image 들을 배열로 만들어 변수에 할당\n  gsap.to(\".title\", { x: 5, ease: \"power1.inOut\", repeat: -1, yoyo: true });\n  gsap.to(\".title\", { y: 5, ease: \"power1.inOut\", repeat: -1, yoyo: true });\n  gsap.to(\".arrow\", { y: 5, ease: \"power1.inOut\", repeat: -1, yoyo: true });\n\n  // arrow 클래스를 y방향으로 5만큼 이동\n  function setup() {\n    let radius = wheel.offsetWidth / 2; // wheel.offsetWidth : wheel 요소의 전체 크기\n    let center = wheel.offsetWidth / 2;\n    let total = images.length;\n    let slice = (2 * Math.PI) / total; // image 갯수로 slice 할당\n\n    images.forEach((item, i) => {\n      let angle = i * slice;\n\n      let x = center + radius * Math.sin(angle);\n      let y = center - radius * Math.cos(angle);\n\n      gsap.set(item, {\n        rotation: angle + \"_rad\",\n        xPercent: -50,\n        yPercent: -50,\n        x: x,\n        y: y,\n      });\n    });\n  }\n\n  // let x = 1000; // 1000일 때 가운데\n  // let y = 0; // 일때 whell 제일 위에 위치, 값이 높아 질수록 중심으로 이동\n  // set 메소드는 속성을 즉시 설정한다.(세팅)\n  //  test 클래스 요소가 opacity가 1일때  gsap.to(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n  //\n  //  test 클래스 요소가 opacity가 1일때  gsap.from(test, 0.5, {opacity : 1});   opacity가 0에서 0.5초 동안 1로 변함\n\n  setup();\n\n  window.addEventListener(\"resize\", setup);\n  // 스크롤 회전\n  gsap.to(\".wheel\", {\n    rotate: () => -360,\n    ease: \"none\",\n    duration: images.length,\n    scrollTrigger: {\n      start: 0,\n      end: \"max\",\n      scrub: 1,\n      snap: 1 / images.length,\n      invalidateOnRefresh: true,\n    },\n  });\n\n  let cards = gsap.utils.toArray(\".wheel__card\");\n  let header = document.querySelector(\".header\");\n\n  // keep track of last clicked card so we can put it back\n  let lastClickedCard;\n\n  cards.forEach((card) => {\n    card.addEventListener(\"click\", (e) => {\n      if (lastClickedCard) {\n        putBack(e);\n      }\n      flip(e);\n    });\n  });\n\n  header.addEventListener(\"click\", (e) => {\n    if (!lastClickedCard) return;\n    putBack(e);\n  });\n\n  // function removeContent(e) {\n  //   let image = header.querySelector(\"img\");\n  //   let content = header.querySelector(\".content\");\n  //   let state = Flip.getState(content);\n\n  //   content.remove();\n  //   Flip.from(state, {\n  //     duration: 0.6,\n  //     ease: \"sine.out\",\n  //     absolute: true,\n  //   });\n  // }\n\n  function putBack(e) {\n    let image = header.querySelector(\"img\");\n    let state = Flip.getState(image);\n\n    lastClickedCard.appendChild(image);\n\n    Flip.from(state, {\n      duration: 0.6,\n      ease: \"sine.out\",\n      absolute: true,\n    });\n\n    lastClickedCard = null;\n    header.removeChild(fragment);\n  }\n\n  function flip(e) {\n    fragment.classList.add(\"content\");\n\n    let image = e.target.querySelector(\"img\");\n\n    let state = Flip.getState(image);\n    header.appendChild(image);\n    header.appendChild(fragment);\n\n    image.classList.add(\"select\");\n    Flip.from(state, {\n      duration: 0.6,\n      ease: \"sine.out\",\n      absolute: true,\n    });\n\n    lastClickedCard = e.target;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
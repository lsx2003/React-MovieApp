{"ast":null,"code":"var _jsxFileName = \"/Users/minhyunglee/Desktop/Project/MovieRank/movie-rank-front/src/container/CardContainer.js\",\n  _s = $RefreshSig$();\nimport Card from \"../component/Card\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardContaioner() {\n  _s();\n  const [newData, setData] = useState([[1]]);\n  let [poster, setPoster] = useState({});\n  const [title, setTitle] = useState([]); // 1~10위 제목이 들어감\n  const [isLoading, setLoading] = useState(false);\n  const getPoster = useCallback(async (el, idx) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:4000/naver/?query=${el}}`);\n      const data = await response.data;\n\n      // 인덱스 설정 후 사진 순위대로 가져오기 구현 해야함\n      Object.assign(poster, {\n        id: idx,\n        url: data[0].image\n      });\n\n      // setPoster(poster.concat([el, idx, data[0].image]));\n      //  poster.push([data[0].image]);\n      console.log(poster);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const getData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://localhost:4000/kobis\");\n      const data = await response.data;\n      setData(data);\n      console.log(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const getTitle = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:4000/kobis/title\");\n      const data = await response.data;\n      console.log(data);\n      setTitle(data);\n      // setLoading(false);\n      title.map(el => {\n        getPoster(el, title.indexOf(el));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    getTitle();\n    getData();\n  }, [setLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"\\uC624\\uB298\\uC758 \\uC601\\uD654 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"slider-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel\",\n        children: isLoading === false ? /*#__PURE__*/_jsxDEV(Card, {\n          newData: newData,\n          poster: poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-down\",\n        children: [\"Scroll down\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CardContaioner, \"pq3JZ4yumhNSZse9lV3gsTSMhLQ=\");\n_c = CardContaioner;\nexport default _c2 = /*#__PURE__*/React.memo(CardContaioner);\nvar _c, _c2;\n$RefreshReg$(_c, \"CardContaioner\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Card","React","useCallback","useEffect","useState","axios","Loading","CardContaioner","newData","setData","poster","setPoster","title","setTitle","isLoading","setLoading","getPoster","el","idx","response","get","data","Object","assign","id","url","image","console","log","error","getData","getTitle","map","indexOf","memo"],"sources":["/Users/minhyunglee/Desktop/Project/MovieRank/movie-rank-front/src/container/CardContainer.js"],"sourcesContent":["import Card from \"../component/Card\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nfunction CardContaioner() {\n  const [newData, setData] = useState([[1]]);\n  let [poster, setPoster] = useState({});\n  const [title, setTitle] = useState([]); // 1~10위 제목이 들어감\n  const [isLoading, setLoading] = useState(false);\n\n  const getPoster = useCallback(async (el, idx) => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(\n        `http://localhost:4000/naver/?query=${el}}`\n      );\n      const data = await response.data;\n\n      // 인덱스 설정 후 사진 순위대로 가져오기 구현 해야함\n      Object.assign(poster, { id: idx, url: data[0].image });\n\n      // setPoster(poster.concat([el, idx, data[0].image]));\n      //  poster.push([data[0].image]);\n      console.log(poster);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const getData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://localhost:4000/kobis\");\n      const data = await response.data;\n      setData(data);\n      console.log(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const getTitle = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:4000/kobis/title\");\n      const data = await response.data;\n      console.log(data);\n      setTitle(data);\n      // setLoading(false);\n      title.map((el) => {\n        getPoster(el, title.indexOf(el));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTitle();\n    getData();\n  }, [setLoading]);\n\n  return (\n    <>\n      {isLoading ? <Loading /> : null}\n      <div className=\"header\"></div>\n      <div className=\"title-wrap\">\n        <div className=\"title\">오늘의 영화 순위</div>\n      </div>\n      <section className=\"slider-section\">\n        <div className=\"wheel\">\n          {isLoading === false ? (\n            <Card newData={newData} poster={poster}></Card>\n          ) : null}\n        </div>\n      </section>\n      <div className=\"title-wrap\">\n        <div className=\"scroll-down\">\n          Scroll down\n          <div className=\"arrow\"></div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(CardContaioner);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}